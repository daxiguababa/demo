name: Release
on:
  release:
    types: [published]
    branches:
      - main
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Code
        uses: actions/checkout@v1
      - name: Intsall Golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b . latest
      - name: Lint
        run: ./golangci-lint run --skip-dirs=".git|.github|dashboard|doc" --timeout=5m

  test:
    name: Unit Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Code
        uses: actions/checkout@v1
      - name: Go Get dependencies
        run: go get -v -t -d ./...
      - name: Go Test
        run: go test -v ./...

  docker:
    needs: [lint, test]
    name: docker build and push
    runs-on: ubuntu-latest
    steps:
      - name: Code
        uses: actions/checkout@v1
      - name: Set env
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - name: tag
        run: echo ${{ env.RELEASE_VERSION }}
      - name: all in one
        run: |
          make all-in-one
          docker login docker.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag demo:latest ${{ secrets.DOCKER_USERNAME }}/demo:latest
          docker tag demo:latest ${{ secrets.DOCKER_USERNAME }}/demo:${{ env.RELEASE_VERSION }}

          docker push ${{ secrets.DOCKER_USERNAME }}/demo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/demo:${{ env.RELEASE_VERSION }}